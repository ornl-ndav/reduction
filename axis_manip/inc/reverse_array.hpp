/*
 *                     SNS Common Libraries
 *           A part of the SNS Analysis Software Suite.
 *
 *                  Spallation Neutron Source
 *          Oak Ridge National Laboratory, Oak Ridge TN.
 *
 *
 *                             NOTICE
 * 
 * For this software and its associated documentation, permission is granted 
 * to reproduce, prepare derivative works, and distribute copies to the public 
 * for any purpose and without fee.
 *  
 * This material was prepared as an account of work sponsored by an agency of 
 * the United States Government.  Neither the United States Government nor the 
 * United States Department of Energy, nor any of their employees, makes any 
 * warranty, express or implied, or assumes any legal liability or 
 * responsibility for the accuracy, completeness, or usefulness of any 
 * information, apparatus, product, or process disclosed, or represents that 
 * its use would not infringe privately owned rights.
 *
 */

/**
 * $Id$
 *
 * \file axis_manip/inc/reverse_array.hpp
 */
#ifndef _REVERSE_ARRAY_HPP
#define _REVERSE_ARRAY_HPP 1

#include "nessi.hpp"
#include <string>

namespace AxisManip
{
  /**
   * \defgroup reverse_array_cp AxisManip::reverse_array_cp
   * \{
   */

  /**
   * \brief This function is described in section 3.11.
   *
   * This function will reorder an array so the last element of the
   * supplied array is the first element of the result array.
   *
   * \param input (INPUT) is the array to be reversed
   * \param output (OUTPUT) is the reversed array
   *
   * \param temp holds temporary memory to be passed to the function
   *
   * \return A set of warnings generated by the function
   */
  template <typename NumT>
  std::string
  reverse_array_cp(const Nessi::Vector<NumT> & input,
                   Nessi::Vector<NumT> & output,
                   void *temp=NULL);

  /**
   * \}
   */ // end of reverse_array_cp group

  /**
   * \defgroup reverse_array_nc AxisManip::reverse_array_nc
   * \{
   */

  /**
   * \brief This function is not described but is based on section 3.11.
   *
   * This function will reorder an array so the last element of the
   * supplied array is the first element of the supplied array. This array
   * reversal is done in place on the supplied array (i.e. no copy).
   *
   * \param inout (INPUT/OUTPUT) is the array to be reversed. It also is the
   * place holder for the reversed array.
   *
   * \param temp holds temporary memory to be passed to the function
   *
   * \return A set of warnings generated by the function
   */
  template <typename NumT>
  std::string
  reverse_array_nc(Nessi::Vector<NumT> & inout,
                   void *temp=NULL);

  /**
   * \}
   */ // end of reverse_array_nc group

} // AxisManip

#endif // _REVERSE_ARRAY_HPP
